name: Docker Image CI
on:
  push:
    branches:
      - trunk
  pull_request:
    branches:
      - trunk
  schedule:
    - cron: "0 0 * * *" # build nightly!

jobs:
  ubuntu-bionic:
    name: Ubuntu 18.04 Bionic
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Clone Artichoke
        uses: actions/checkout@v2
        with:
          repository: artichoke/artichoke
          path: artichoke

      - name: Set Artichoke latest commit
        id: latest
        working-directory: artichoke
        run: echo "::set-output name=commit::$(git rev-parse HEAD)"

      - name: Set Artichoke Rust toolchain version
        id: rust_toolchain
        working-directory: artichoke
        run: echo "::set-output name=version::$(cat rust-toolchain)"

      - name: Build and push Docker images
        uses: docker/build-push-action@v1
        with:
          dockerfile: ubuntu/bionic/Dockerfile
          username: ${{ secrets.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          repository: artichokeruby/artichoke
          tag_with_ref: false
          tag_with_sha: false
          tags: >
            latest,
            ${{ steps.latest.outputs.commit }},
            ubunutu-nightly,
            ubuntu18.04-nightly,
            ubuntu-nightly-${{ steps.latest.outputs.commit }}
          build_args: >
            ARTICHOKE_NIGHTLY_VER=${{ steps.latest.outputs.commit }},RUST_VERSION=${{ steps.rust_toolchain.outputs.version }}
          push: ${{ github.ref == 'refs/heads/trunk' }}

  debian-buster-slim:
    name: Debian Buster Slim
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Clone Artichoke
        uses: actions/checkout@v2
        with:
          repository: artichoke/artichoke
          path: artichoke

      - name: Set Artichoke latest commit
        id: latest
        working-directory: artichoke
        run: echo "::set-output name=commit::$(git rev-parse HEAD)"

      - name: Set Artichoke Rust toolchain version
        id: rust_toolchain
        working-directory: artichoke
        run: echo "::set-output name=version::$(cat rust-toolchain)"

      - name: Build and push Docker images
        uses: docker/build-push-action@v1
        with:
          dockerfile: debian/buster/slim/Dockerfile
          username: ${{ secrets.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          repository: artichokeruby/artichoke
          tag_with_ref: false
          tag_with_sha: false
          tags: >
            slim-nightly,
            slim-buster-nightly,
            slim-nightly-${{ steps.latest.outputs.commit }}
          build_args: >
            ARTICHOKE_NIGHTLY_VER=${{ steps.latest.outputs.commit }},RUST_VERSION=${{ steps.rust_toolchain.outputs.version }}
          push: ${{ github.ref == 'refs/heads/trunk' }}

  alpine:
    name: Alipine 3.11
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Clone Artichoke
        uses: actions/checkout@v2
        with:
          repository: artichoke/artichoke
          path: artichoke

      - name: Set Artichoke latest commit
        id: latest
        working-directory: artichoke
        run: echo "::set-output name=commit::$(git rev-parse HEAD)"

      - name: Set Artichoke Rust toolchain version
        id: rust_toolchain
        working-directory: artichoke
        run: echo "::set-output name=version::$(cat rust-toolchain)"

      - name: Build and push Docker images
        uses: docker/build-push-action@v1
        with:
          dockerfile: alpine/Dockerfile
          username: ${{ secrets.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          repository: artichokeruby/artichoke
          tag_with_ref: false
          tag_with_sha: false
          tags: >
            alpine-nightly,
            alpine3-nightly,
            alpine-nightly-${{ steps.latest.outputs.commit }}
          build_args: >
            ARTICHOKE_NIGHTLY_VER=${{ steps.latest.outputs.commit }},RUST_VERSION=${{ steps.rust_toolchain.outputs.version }}
          push: ${{ github.ref == 'refs/heads/trunk' }}
