---
name: Docker Image CI
"on":
  push:
    branches:
      - trunk
  pull_request:
    branches:
      - trunk
  schedule:
    - cron: "0 0 * * *" # build nightly!

jobs:
  ubuntu-bionic:
    name: Ubuntu 18.04 Bionic
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Clone Artichoke
        uses: actions/checkout@v2
        with:
          repository: artichoke/artichoke
          path: artichoke

      - name: Set Artichoke latest commit
        id: latest
        working-directory: artichoke
        run: |
          echo "Artichoke git ref: $(git rev-parse HEAD)"
          echo "::set-output name=commit::$(git rev-parse HEAD)"

      - name: Set Artichoke Rust toolchain version
        id: rust_toolchain
        working-directory: artichoke
        run: |
          echo "Rust toolchain version: $(cat rust-toolchain)"
          echo "::set-output name=version::$(cat rust-toolchain)"

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker images
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ubuntu/bionic/Dockerfile
          push: ${{ github.ref == 'refs/heads/trunk' }}
          tags: |
            artichokeruby/artichoke:latest
            artichokeruby/artichoke:${{ steps.latest.outputs.commit }}
            artichokeruby/artichoke:ubunutu-nightly
            artichokeruby/artichoke:ubuntu18.04-nightly
            artichokeruby/artichoke:ubuntu-nightly-${{ steps.latest.outputs.commit }}
          build-args: |
            ARTICHOKE_NIGHTLY_VER=${{ steps.latest.outputs.commit }}
            RUST_VERSION=${{ steps.rust_toolchain.outputs.version }}

  debian-buster-slim:
    name: Debian Buster Slim
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Clone Artichoke
        uses: actions/checkout@v2
        with:
          repository: artichoke/artichoke
          path: artichoke

      - name: Set Artichoke latest commit
        id: latest
        working-directory: artichoke
        run: |
          echo "Artichoke git ref: $(git rev-parse HEAD)"
          echo "::set-output name=commit::$(git rev-parse HEAD)"

      - name: Set Artichoke Rust toolchain version
        id: rust_toolchain
        working-directory: artichoke
        run: |
          echo "Rust toolchain version: $(cat rust-toolchain)"
          echo "::set-output name=version::$(cat rust-toolchain)"

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker images
        uses: docker/build-push-action@v2
        with:
          context: .
          file: debian/bullseye/slim/Dockerfile
          push: ${{ github.ref == 'refs/heads/trunk' }}
          tags: |
            artichokeruby/artichoke:slim-nightly
            artichokeruby/artichoke:slim-bullseye-nightly
            artichokeruby/artichoke:slim-nightly-${{ steps.latest.outputs.commit }}
          build-args: |
            ARTICHOKE_NIGHTLY_VER=${{ steps.latest.outputs.commit }}
            RUST_VERSION=${{ steps.rust_toolchain.outputs.version }}

  alpine:
    name: Alpine 3
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Clone Artichoke
        uses: actions/checkout@v2
        with:
          repository: artichoke/artichoke
          path: artichoke

      - name: Set Artichoke latest commit
        id: latest
        working-directory: artichoke
        run: |
          echo "Artichoke git ref: $(git rev-parse HEAD)"
          echo "::set-output name=commit::$(git rev-parse HEAD)"

      - name: Set Artichoke Rust toolchain version
        id: rust_toolchain
        working-directory: artichoke
        run: |
          echo "Rust toolchain version: $(cat rust-toolchain)"
          echo "::set-output name=version::$(cat rust-toolchain)"

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker images
        uses: docker/build-push-action@v2
        with:
          context: .
          file: alpine/Dockerfile
          push: ${{ github.ref == 'refs/heads/trunk' }}
          tags: |
            artichokeruby/artichoke:alpine-nightly
            artichokeruby/artichoke:alpine3-nightly
            artichokeruby/artichoke:alpine-nightly-${{ steps.latest.outputs.commit }}
          build-args: |
            ARTICHOKE_NIGHTLY_VER=${{ steps.latest.outputs.commit }}
            RUST_VERSION=${{ steps.rust_toolchain.outputs.version }}
